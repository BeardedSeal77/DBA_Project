Oracle works in a way where all the data is held in one place (the database) but seperates concerns through users and roles.

CDB/PDB = The container and pluggable database (XE)

Role = A collection of privileges (like a permission group)
User = A login that also owns a schema

each user owns a schema, and that schema contains all their objects:
-   Tables
-   Views
-   Procedures
-   Triggers
-   Packages

Because I am connected as SYSTEM, I see 

DBA Project/ (oracle connection)
├─ security/
│  ├─ Users/
│  │  ├─ User1 *these dont exist yet
│  │  └─ User2
│  └─ Roles/
└─ SYSTEM/ *this is the current users schema
   ├─ Query/
   ├─ Tables/
   ├─ Views/
   ├─ Packages/
   ├─ Functions/
   └─ Procedures/


And, because SYSTEM is a DBA, you also see all users and security-related objects.
SYSTEM is used to create roles and users, BUT NOT TABLES OR SCHEMAS
Each USER/ROLE is given permissions and they can create, connect to , work in schemas

DBA Project/ (oracle connection)
│
├─ security/    *so this is where SYSTEM does its work
│  ├─ Users/
│  │  ├─ User1
│  │  └─ User2
│  └─ Roles/
│
└─ User1/       *this is where Current_User does its work
   ├─ Query/
   ├─ Tables/
   ├─ Views/
   ├─ Packages/
   ├─ Functions/
   └─ Procedures/

------------------------------------------------------------------------------------------------
steps when creating a new "database" (this isnt a new database, it is simply a new container inside a massive database that contains alllllll oracle "databases"/containers)

1) Connect to the database as SYSTEM
    -- Connect to the Oracle database as SYSTEM
    -- Only run this in SQL*Plus or VS Code's SQL editor

    -- If you're using SQL*Plus (in terminal), you'd type:
        sqlplus system/password@localhost/XEPDB1

    -- In SQL script form (for tools like VS Code or SQLcl):
        CONNECT system/password@localhost:1521/XEPDB1;

------------------------------------------------------------------------------------------------
2) SYSTEM (superuser) is to create roles

    -- Role for general read-only users.
        CREATE ROLE bookstore_read_only;
        GRANT CREATE SESSION TO bookstore_read_only;

    -- Role for data entry users (no DDL).
        CREATE ROLE bookstore_data_entry;
        GRANT CREATE SESSION TO bookstore_read_only;


    -- Role for admin-level access. (fulle DDL and DML)
        CREATE ROLE bookstore_manager;
        GRANT CREATE SESSION TO bookstore_read_only;


    -- Give it object creation rights (not access to specific tables yet).
        GRANT CONNECT TO bookstore_manager; -- Obsolete, use CREATE SESSION
        GRANT CREATE SESSION TO bookstore_manager;
        GRANT CREATE TABLE TO bookstore_manager;
        GRANT CREATE VIEW TO bookstore_manager;
        GRANT CREATE PROCEDURE TO bookstore_manager;
        GRANT CREATE SEQUENCE TO bookstore_manager;
        GRANT CREATE TRIGGER TO bookstore_manager;

this lets the bookstore_manager role create their own Schema

------------------------------------------------------------------------------------------------
3) SYSTEM is to create a user and give them the role

    -- General viewer (read-only user).
        CREATE USER user_viewer IDENTIFIED BY Viewer#2025;
        DEFAULT TABLESPACE USERS
        QUOTA UNLIMITED ON USERS;
        GRANT bookstore_read_only TO user_viewer;

    -- Data entry clerk (data entry user).
        CREATE USER user_clerk IDENTIFIED BY Clerk#2025;
        DEFAULT TABLESPACE USERS
        QUOTA UNLIMITED ON USERS;
        GRANT bookstore_data_entry TO user_clerk;

    -- Admin staff (admin user).
        CREATE USER user_manager IDENTIFIED BY Manager#2025
        DEFAULT TABLESPACE USERS  -- best practice to explicitly assign default
        QUOTA UNLIMITED ON USERS; -- required to write to a tablespace

    -- Give them the app role
        GRANT bookstore_manager TO user_manager;
    -- Give the user entire ownership of objects they own (like when a user creates a table)
        GRANT UNLIMITED TABLESPACE TO user_manager;

------------------------------------------------------------------------------------------------
4) log in as user_manager and create the tables, and give access to roles

    -- Console:
        DISCONNET;
        CONNECT user_manager/Manager#2025@localhost:1521/XEPDB1;
    
    -- VScode: create new connection

    -- Example table creation
        CREATE TABLE tblBook (
        id NUMBER GENERATED BY DEFAULT AS IDENTITY,
        title VARCHAR2(100),
        price NUMBER(8,2),
        PRIMARY KEY (id)
        );
    
    -- Share the table with the relevant roles
        GRANT SELECT ON tblBook TO bookstore_read_only;
        GRANT SELECT, INSERT, UPDATE ON tblBook TO bookstore_data_entry;
        GRANT SELECT, INSERT, UPDATE, DELETE ON tblBook TO bookstore_manager;
