-- Active: 1747217122266@@127.0.0.1@1521@XEPDB1@USER_MANAGER
-- Connection Settings
--  Group: DBA
--  Name: DBA User_Manager 
--  Host: 127.0.0.1 
--  Port: 1521 
--  Username: user_manager 
--  Password: Manager#2025 
--  Database: XEPDB1

---------------------------------------------------------------------------------
-- 1) Log in as user_manager and create the tables
-- In SQL*Plus, you would do:
-- sqlplus user_manager/Manager#2025@127.0.0.1/XEPDB1
-- DISCONNECT;
-- CONNECT user_manager/Manager#2025@127.0.0.1/XEPBD1;

-- Verify the connection
SELECT USER FROM dual;


---------------------------------------------------------------------------------
-- Checks if tablespace already exists
DECLARE
	TablespaceExistsExcep	EXCEPTION;
	PRAGMA EXCEPTION_INIT(TablespaceExistsExcep,-1543);
BEGIN
	EXECUTE IMMEDIATE 'create tablespace dataaudit datafile ''dataaudit.dbf'' size 100M';
EXCEPTION
	WHEN TablespaceExistsExcep THEN
		DBMS_OUTPUT.PUT_LINE('Microwave Noises');
		NULL;
END;
/

-- Checks if tblBooksAudit already exists
DECLARE
	TableExistsExcep	EXCEPTION;
	PRAGMA EXCEPTION_INIT(TableExistsExcep,-0955);
BEGIN
	EXECUTE IMMEDIATE 
        'CREATE TABLE tblBookAudit (
        log_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        username       VARCHAR2(30),
        action         VARCHAR2(10),    --INSERT, UPDATE, DELETE
        action_time    TIMESTAMP DEFAULT SYSTIMESTAMP,
        BookID          NUMBER,
        BookTitle       VARCHAR2(200) NOT NULL,
        BookPublisher   VARCHAR2(100),
        BookPublicationDate DATE,
        BookPrice       NUMBER(8,2),
        BookQuantity    NUMBER
      ) TABLESPACE dataaudit';
EXCEPTION
	WHEN TableExistsExcep THEN
		DBMS_OUTPUT.PUT_LINE('YOUR COMPUTER IS GOING TO EXPLODE');
		NULL;
END;
/



CREATE OR REPLACE TRIGGER trg_book_audit
AFTER INSERT OR UPDATE OR DELETE ON tblBook
FOR EACH ROW
DECLARE
  v_action VARCHAR2(10);
BEGIN
    -- Determine action type
    IF INSERTING THEN 
        v_action := 'INSERT';
    ELSIF UPDATING THEN
        v_action := 'UPDATE';
    ELSE
        v_action := 'DELETE';
    END IF;

    -- Insert into audit table
    INSERT INTO tblBookAudit (
        username,
        action,
        action_time,
        BookID,
        BookTitle,
        BookPublisher,
        BookPublicationDate,
        BookPrice,
        BookQuantity
    )
    VALUES (
        USER,
        v_action,
        SYSTIMESTAMP,
        NVL(:NEW.BookID, :OLD.BookID),
        NVL(:NEW.BookTitle, :OLD.BookTitle),
        NVL(:NEW.BookPublisher, :OLD.BookPublisher),
        NVL(:NEW.BookPublicationDate, :OLD.BookPublicationDate),
        NVL(:NEW.BookPrice, :OLD.BookPrice),
        NVL(:NEW.BookQuantity, :OLD.BookQuantity)
    );
END;
/

