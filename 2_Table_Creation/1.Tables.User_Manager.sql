-- Active: 1747217122266@@127.0.0.1@1521@XEPDB1@USER_MANAGER
-- Connection Settings
--  Group: DBA
--  Name: DBA User_Manager
--  Host: 127.0.0.1
--  Port: 1521 
--  Username: user_manager
--  Password: Manager#2025
--  Database: XEPDB1

---------------------------------------------------------------------------------
-- 1) Log in as user_manager and create the tables
-- In SQL*Plus, you would do:
-- sqlplus user_manager/Manager#2025@127.0.0.1/XEPDB1
-- DISCONNECT;
-- CONNECT user_manager/Manager#2025@127.0.0.1/XEPBD1;

-- Verify the connection
SELECT USER FROM dual;

---------------------------------------------------------------------------------
---------------------------------Tables------------------------------------------
---------------------------------------------------------------------------------

-- create table space for normal data
CREATE TABLESPACE dataspace
DATAFILE 'dataspace.dbf' SIZE 100M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED;


-- Author Table
CREATE TABLE tblAuthor (
    AuthorID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    AuthorName      VARCHAR2(100) NOT NULL
)TABLESPACE dataspace;

-- Book Table
CREATE TABLE tblBook (
    BookID          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    BookTitle       VARCHAR2(200) NOT NULL,
    BookPublisher   VARCHAR2(100),
    BookPublicationDate DATE,
    BookPrice       NUMBER(8,2),
    BookQuantity    NUMBER
)TABLESPACE dataspace;

-- BookAuthor Junction Table 
CREATE TABLE tblBookAuthor (
    BookAuthorID    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    BookID          NUMBER NOT NULL,
    AuthorID        NUMBER NOT NULL,
    CONSTRAINT      fk_ba_book FOREIGN KEY (BookID) REFERENCES tblBook(BookID) ON DELETE CASCADE,
    CONSTRAINT      fk_ba_author FOREIGN KEY (AuthorID) REFERENCES tblAuthor(AuthorID) ON DELETE CASCADE
)TABLESPACE dataspace;

-- Customer Table
CREATE TABLE tblCustomer (
    CustomerID      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CustomerName    VARCHAR2(100) NOT NULL,
    CustomerAddress  VARCHAR2(200),
    CustomerEmail   VARCHAR2(100)
)TABLESPACE dataspace;

-- Order Table
CREATE TABLE tblOrder (
    OrderID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CustomerID      NUMBER NOT NULL,
    OrderDate       DATE NOT NULL,
    OrderTime       VARCHAR2(10),  -- Could also be DATE or TIMESTAMP
    CONSTRAINT      fk_order_customer FOREIGN KEY (CustomerID) REFERENCES tblCustomer(CustomerID)
)TABLESPACE dataspace;

-- OrderDetail Junction Table
CREATE TABLE tblOrderDetail (
    OrderDetailID   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    OrderID         NUMBER NOT NULL,
    BookID          NUMBER NOT NULL,
    OrderQuantity   NUMBER NOT NULL,
    OrderPrice      NUMBER(8,2),
    CONSTRAINT      fk_od_order FOREIGN KEY (OrderID) REFERENCES tblOrder(OrderID),
    CONSTRAINT      fk_od_book FOREIGN KEY (BookID) REFERENCES tblBook(BookID)
)TABLESPACE dataspace;

-- create public synonyms for all tables, this allows users with permission to easy access tables
CREATE PUBLIC SYNONYM tblAuthor     FOR user_manager.tblAuthor;
CREATE PUBLIC SYNONYM tblBook       FOR user_manager.tblBook;
CREATE PUBLIC SYNONYM tblBookAuthor FOR user_manager.tblBookAuthor;
CREATE PUBLIC SYNONYM tblCustomer   FOR user_manager.tblCustomer;
CREATE PUBLIC SYNONYM tblOrder      FOR user_manager.tblOrder;
CREATE PUBLIC SYNONYM tblOrderDetail FOR user_manager.tblOrderDetail;

---------------------------------------------------------------------------------
---------------------------------Verification------------------------------------
---------------------------------------------------------------------------------
-- Verify table structure
SELECT table_name 
FROM user_tables 
WHERE table_name LIKE 'TBL%'
ORDER BY table_name;

-- Verify Synonyms
SELECT * FROM ALL_SYNONYMS WHERE TABLE_OWNER = 'USER_MANAGER';

-- You can describe each table with:
-- DESCRIBE tblAuthor;
-- DESCRIBE tblBook;
-- DESCRIBE tblBookAuthor;
-- DESCRIBE tblCustomer;
-- DESCRIBE tblOrder;
-- DESCRIBE tblOrderDetail;